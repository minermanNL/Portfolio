@tailwind base;
@tailwind components;
@tailwind utilities;
 
@layer base {
  :root {
    /* Define colors using HSL values for easier theming */
    /* Reference: Purple ~hsl(260, 80%, 50%), Teal ~hsl(170, 80%, 40%) */
    --background: 220 15% 8%; /* Dark blue-grey background */
    --foreground: 210 40% 98%; /* Almost white text */

    --card: 220 13% 12%; /* Slightly lighter dark for cards */
    --card-foreground: 210 40% 98%;

    --popover: 220 13% 10%; /* Darker popover */
    --popover-foreground: 210 40% 98%;

    --primary: 260 70% 60%; /* Vibrant Purple */
    --primary-foreground: 210 40% 98%;

    --secondary: 170 80% 40%; /* Vibrant Teal */
    --secondary-foreground: 210 40% 98%;

    --muted: 217 33% 30%; /* Muted blue-grey */
    --muted-foreground: 215 20% 65%; /* Lighter muted text */

    --accent: 170 75% 45%; /* Teal accent */
    --accent-foreground: 220 15% 8%; /* Dark text on accent */

    --destructive: 0 63% 50%; /* Red */
    --destructive-foreground: 210 40% 98%;

    --border: 217 33% 25%; /* Darker border */
    --input: 217 33% 25%; /* Input background */
    --ring: 170 80% 40%; /* Teal focus ring */

    --radius: 0.75rem; /* Default border radius */

    /* Added surface color for slightly darker elements like nav/footer */
    --surface: 220 13% 12%; 
  }
 
  .dark {
    /* Dark theme variables (already defined above for simplicity) */
  }
}
 
@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    /* Apply the complex background from index.html */
    background: linear-gradient(135deg, hsl(var(--background)), hsl(var(--surface)));
    position: relative;
    overflow-x: hidden;
  }

  /* Animated gradient background overlay */
  body::before {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: 
        radial-gradient(circle at 20% 20%, hsla(var(--primary) / 0.15) 0%, transparent 40%),
        radial-gradient(circle at 80% 80%, hsla(var(--secondary) / 0.15) 0%, transparent 40%);
      pointer-events: none;
      z-index: -1;
      animation: backgroundPulse 15s ease-in-out infinite;
      /* Use the animation defined in tailwind.config.ts */
      /* @apply animate-background-pulse; */ /* This causes issues, use direct animation name */
      animation-name: backgroundPulse;
  }
}

/* Custom Component Styles & Effects from index.html */
@layer components {
  .glass-effect {
    @apply bg-surface/70 backdrop-blur-md border border-white/10 relative overflow-hidden transition-all duration-300 ease-in-out shadow-lg;
  }
  .glass-effect:hover {
    @apply transform -translate-y-1 shadow-[0_8px_30px_rgba(3,218,198,0.2)] border-secondary/20;
  }
  /* Add subtle shine effect */
  .glass-effect::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 200%;
      height: 100%;
      background: linear-gradient(
        120deg,
        transparent,
        rgba(255, 255, 255, 0.05),
        transparent
      );
      transform: rotate(45deg);
      transition: left 0.7s cubic-bezier(0.25, 0.46, 0.45, 0.94);
      pointer-events: none;
      opacity: 0.5;
  }
  .glass-effect:hover::before {
    left: 100%;
  }

  .btn-hover {
    @apply transition-all duration-300 ease-in-out relative overflow-hidden;
  }
  .btn-hover:hover {
    @apply transform -translate-y-0.5 shadow-[0_8px_20px_rgba(3,218,198,0.3)];
  }
  /* Adding ripple effect */
  .btn-hover::after {
      content: '';
      position: absolute;
      top: 50%; 
      left: 50%;
      width: 5px;
      height: 5px;
      background: rgba(255, 255, 255, 0.5);
      opacity: 0;
      border-radius: 100%;
      transform: scale(1) translate(-50%, -50%); 
      transform-origin: 50% 50%;
      pointer-events: none;
  }
  .btn-hover:focus:not(:active)::after {
      animation: ripple 1s ease-out;
  }
  @keyframes ripple {
      0% { transform: scale(0) translate(-50%, -50%); opacity: 1; }
      50% { opacity: 0.8; }
      100% { transform: scale(20) translate(-50%, -50%); opacity: 0; }
  }

  .feature-card {
    /* Changed duration-400 to duration-300 */
    @apply transition-all duration-300 ease-in-out relative overflow-hidden rounded-2xl border border-transparent;
    /* Use a more subtle background */
    @apply bg-gradient-to-br from-card to-surface;
  }
  .feature-card:hover {
    @apply transform -translate-y-2 scale-[1.02] shadow-2xl border-secondary/20;
    box-shadow: 
        0 20px 40px rgba(0, 0, 0, 0.3),
        0 0 20px hsla(var(--secondary) / 0.2),
        inset 0 0 20px hsla(var(--secondary) / 0.1);
  }
   /* Add a subtle glow effect on hover for feature cards */
   .feature-card::after {
      content: '';
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: radial-gradient(circle, hsla(var(--secondary) / 0.1), transparent 70%);
      opacity: 0;
      /* Changed transition duration to match element */
      transition: opacity 0.3s ease;
      pointer-events: none;
      animation: cardGlow 2s infinite alternate;
      animation-play-state: paused; /* Start paused */
  }
  .feature-card:hover::after {
      opacity: 1;
      animation-play-state: running; /* Play on hover */
  }

  /* Navigation hover effects */
  nav a,
  nav button {
    @apply relative transition-colors duration-300 ease-in-out;
  }
  nav a::after,
  nav button::after {
    content: '';
    position: absolute;
    width: 0;
    height: 2px;
    bottom: -4px; /* Adjusted position */
    left: 50%;
    background: linear-gradient(90deg, hsl(var(--secondary)), hsl(var(--primary)));
    transition: all 0.3s ease;
    transform: translateX(-50%);
    border-radius: 1px;
  }
  nav a:hover::after,
  nav button:hover::after {
    width: 100%;
  }
  nav a:hover, nav button:hover {
    @apply text-secondary;
  }

  /* Price tag glow effect */
  .text-secondary {
    /* Adjusted glow color to use HSL variable */
    text-shadow: 0 0 10px hsla(var(--secondary) / 0.3);
  }

  /* Most Popular badge animation */
  .badge-popular {
     @apply animate-badge-pulse;
  }

  /* Check icon animation on list item hover */
  li:hover .material-icons-check {
    @apply transform scale-125 text-secondary transition-transform duration-300 ease-in-out;
  }

  /* Material Icons base styles (if you plan to use them) */
  /* Commented out as lucide-react is used */
  /* .material-icons { ... } */
}
